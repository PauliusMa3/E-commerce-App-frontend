{"version":3,"file":"static/webpack/static/development/pages/sell.js.8ced410c33386db50aa9.hot-update.js","sources":["webpack:///./components/Sell.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport Router from \"next/router\";\r\nimport { ALL_PRODUCTS_QUERY } from \"./Products\";\r\nimport Form from \"../components/styles/Form\";\r\n\r\nconst CREATE_PRODUCT_MUTATION = gql`\r\n  mutation createItem(\r\n    $title: String!\r\n    $description: String!\r\n    $price: Int!\r\n    $image: String\r\n    $largeImage: String\r\n  ) {\r\n    createItem(\r\n      title: $title\r\n      description: $description\r\n      price: $price\r\n      image: $image\r\n      largeImage: $largeImage\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nclass Sell extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    image: \"\",\r\n    price: 0,\r\n    largeImage: \"\"\r\n  };\r\n\r\n  changeHandler = e => {\r\n    const { value, type } = e.target;\r\n    const val = type === \"number\" ? parseInt(value) : value;\r\n    this.setState({ [e.target.name]: val });\r\n  };\r\n\r\n  fileHandler = async e => {\r\n    const files = e.target.files;\r\n\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"Tracky-Tronics\");\r\n\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/dalb6tk7y/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data\r\n      }\r\n    );\r\n\r\n    const file = await res.json();\r\n\r\n    this.setState({\r\n      image: file.secure_url,\r\n      largeImage: file.eager[1].secure_url\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Mutation\r\n        mutation={CREATE_PRODUCT_MUTATION}\r\n        variables={this.state}\r\n        refetchQueries={[{ query: ALL_PRODUCTS_QUERY }]}\r\n      >\r\n        {(createItem, { loading, error }) => {\r\n          if (error) return <p>{error.message}</p>;\r\n          return (\r\n            <Form\r\n              onSubmit={async e => {\r\n                e.preventDefault();\r\n\r\n                await createItem();\r\n\r\n                Router.push(\"/products\");\r\n              }}\r\n            >\r\n              <fieldset disabled={loading}>\r\n                <label htmlFor=\"title\">\r\n                  Title:\r\n                  <input\r\n                    id=\"title\"\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Product Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"file\">\r\n                  Product Image:\r\n                  <input\r\n                    id=\"file\"\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    placeholder=\"Product Image\"\r\n                    onChange={this.fileHandler}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"price\">\r\n                  Product Price:\r\n                  <input\r\n                    id=\"price\"\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    placeholder=\"Product Price\"\r\n                    value={this.state.price}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </label>\r\n                <label htmlFor=\"description\">\r\n                  Product Description:\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    placeholder=\"Product Description\"\r\n                    className=\"product-form--textarea\"\r\n                    value={this.state.description}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </label>\r\n                <button className=\"product-form--button\" type=\"Submit\">\r\n                  Submit\r\n                </button>\r\n              </fieldset>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sell;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAoBA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AALA;AAAA;AAUA;AACA;AAFA;AACA;AAVA;AAOA;AAPA;AAAA;AACA;AADA;AAeA;AACA;AACA;AACA;AACA;AAFA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAsBA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;;;;AA9GA;AACA;AAgHA;;;;A","sourceRoot":""}